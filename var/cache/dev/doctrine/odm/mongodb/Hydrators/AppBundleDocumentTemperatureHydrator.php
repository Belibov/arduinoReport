<?php

namespace Hydrators;

use Doctrine\ODM\MongoDB\DocumentManager;
use Doctrine\ODM\MongoDB\Mapping\ClassMetadata;
use Doctrine\ODM\MongoDB\Hydrator\HydratorInterface;
use Doctrine\ODM\MongoDB\Query\Query;
use Doctrine\ODM\MongoDB\UnitOfWork;
use Doctrine\ODM\MongoDB\Mapping\ClassMetadataInfo;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ODM. DO NOT EDIT THIS FILE.
 */
class AppBundleDocumentTemperatureHydrator implements HydratorInterface
{
    private $dm;
    private $unitOfWork;
    private $class;

    public function __construct(DocumentManager $dm, UnitOfWork $uow, ClassMetadata $class)
    {
        $this->dm = $dm;
        $this->unitOfWork = $uow;
        $this->class = $class;
    }

    public function hydrate($document, $data, array $hints = array())
    {
        $hydratedData = array();

        /** @Field(type="id") */
        if (isset($data['_id']) || (! empty($this->class->fieldMappings['id']['nullable']) && array_key_exists('_id', $data))) {
            $value = $data['_id'];
            if ($value !== null) {
                $return = $value instanceof \MongoId ? (string) $value : $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['id']->setValue($document, $return);
            $hydratedData['id'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['arduinoName']) || (! empty($this->class->fieldMappings['arduinoName']['nullable']) && array_key_exists('arduinoName', $data))) {
            $value = $data['arduinoName'];
            if ($value !== null) {
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['arduinoName']->setValue($document, $return);
            $hydratedData['arduinoName'] = $return;
        }

        /** @Field(type="int") */
        if (isset($data['time']) || (! empty($this->class->fieldMappings['time']['nullable']) && array_key_exists('time', $data))) {
            $value = $data['time'];
            if ($value !== null) {
                $return = (int) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['time']->setValue($document, $return);
            $hydratedData['time'] = $return;
        }

        /** @Field(type="float") */
        if (isset($data['temperature']) || (! empty($this->class->fieldMappings['temperature']['nullable']) && array_key_exists('temperature', $data))) {
            $value = $data['temperature'];
            if ($value !== null) {
                $return = (float) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['temperature']->setValue($document, $return);
            $hydratedData['temperature'] = $return;
        }

        /** @Field(type="float") */
        if (isset($data['humidity']) || (! empty($this->class->fieldMappings['humidity']['nullable']) && array_key_exists('humidity', $data))) {
            $value = $data['humidity'];
            if ($value !== null) {
                $return = (float) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['humidity']->setValue($document, $return);
            $hydratedData['humidity'] = $return;
        }

        /** @Field(type="float") */
        if (isset($data['feeledTemperature']) || (! empty($this->class->fieldMappings['feeledTemperature']['nullable']) && array_key_exists('feeledTemperature', $data))) {
            $value = $data['feeledTemperature'];
            if ($value !== null) {
                $return = (float) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['feeledTemperature']->setValue($document, $return);
            $hydratedData['feeledTemperature'] = $return;
        }
        return $hydratedData;
    }
}